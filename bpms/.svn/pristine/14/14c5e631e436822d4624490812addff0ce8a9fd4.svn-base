package kr.or.ddit.projects.scm.vo;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotBlank;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;

@ToString(exclude = { "scm_name", "scm_pass" })
@EqualsAndHashCode(of = "pro_id")
@Data
public class ScmVO implements Serializable {
	@NotBlank
	@Size(max = 15)
	private String proId; // 프로젝트 식별자

	@NotBlank
	@Size(max = 200)
	private String scmId; // 저장소 아이디

	@NotBlank
	@Size(max = 20)
	private String scmName; // 저장소 명

	@NotNull
	@Min(0)
	private Integer scmPass; // 저장소 패스워드
	
	@NotNull
	private String scmUrl; // 저장소 url

	@Size(max = 50)
	private String branchName; // 브랜치 명 : 필요 없을 듯 하다.
	
	@NotNull
	@Min(0)
	private Integer code; // 코드

	@NotBlank
	@Size(max = 10)
	private String groupCode; // 그룹코드

	@NotBlank
	@Size(max = 15)
	private String memId; // 등록한 회원 아이디
	
	// 기록 가져오기 위한 컬럼
	
	private long revision;	// 리비전 넘버
	
	private String author; // 커밋 회원 아이디
	
	private String date; // 커밋 날짜
	
	private String message; // 커밋 기록 내용 
	
	private String setDate(Date date) {
		return null;
	}
	
	//github 커밋 기록 필요 컬럼
	
	private String sha; // 깃허브 커밋 ID
	
	private String gitRepository; // 깃허브 저장소
	
	private Integer commitCount; // 커밋 카운트
	
	private List<ScmVO> scmList;
}
