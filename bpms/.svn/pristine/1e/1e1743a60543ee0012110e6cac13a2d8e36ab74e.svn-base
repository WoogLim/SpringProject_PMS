<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.projects.chat.dao.ChatDAO">
	
	<resultMap type="kr.or.ddit.projects.chat.vo.ChatRoomVO" id="chatRoomMap" autoMapping="true">
		<id property="chatRoomId" column="CHAT_ROOM_ID"/>
		<collection property="chatMemberList" javaType="java.util.List" ofType="kr.or.ddit.projects.chat.vo.ChatMemberVO" autoMapping="true">
		</collection>
		<collection property="messageList" ofType="kr.or.ddit.projects.chat.vo.MessageVO" autoMapping="false">
			<id property="msgId" column="MSG_ID"/>
			<id property="chatRoomId" column="CHAT_ROOM_ID"/>
			<id property="msgWriter" column="MSG_WRITER"/>
			<id property="msgContent" column="MSG_CONTENT"/>
			<id property="createDate" column="CREATE_DATE"/>
			</collection>
	</resultMap>
	
	<select id="selectChatRoomList" parameterType="String" resultType="kr.or.ddit.projects.chat.vo.ChatRoomVO">
		SELECT *
   			FROM CHAT_ROOM
   			WHERE CHAT_ROOM_ID IN (SELECT CHAT_ROOM_ID
	                   				   FROM CHAT_MEMBER
	                   				   WHERE MEM_ID = #{memId, jdbcType=VARCHAR})
	</select>
	
	<select id="selectRecentMessage" parameterType="String" resultType="kr.or.ddit.projects.chat.vo.MessageVO">
		SELECT M.MSG_CONTENT
         	 , M.CHAT_ROOM_ID
         	 , M.MSG_ID
         	 , TO_CHAR(M.CREATE_DATE, 'YY-MM-DD hh:mi') CREATE_DATE
		  FROM (
		    SELECT MAX(M.MSG_ID) MSG_ID
		         , M.CHAT_ROOM_ID
		      FROM MESSAGE M RIGHT JOIN (SELECT CHAT_ROOM_ID
                                           FROM CHAT_MEMBER
                                          WHERE MEM_ID = '#{memId, jdbcType=VARCHAR}') PQ ON (M.CHAT_ROOM_ID = PQ.CHAT_ROOM_ID)
		     GROUP BY M.CHAT_ROOM_ID
		  ) AA, MESSAGE M
		 WHERE M.MSG_ID = AA.MSG_ID
	       AND M.CHAT_ROOM_ID = AA.CHAT_ROOM_ID;	
	</select>
		
	<select id="selectChatHistory" parameterType="kr.or.ddit.projects.chat.vo.ChatRoomVO" resultMap="chatRoomMap">
     	SELECT B.MSG_ID, 
  		  		A.CHAT_ROOM_ID, 
  		  		B.MSG_WRITER, 
  		  		B.MSG_CONTENT, 
  		  		TO_CHAR(CREATE_DATE, 'YYYY-MM-DD hh24:mi') CREATE_DATE, 
  		  	    PRO_ID 
  		  	FROM CHAT_ROOM A INNER JOIN MESSAGE B ON (A.CHAT_ROOM_ID = B.CHAT_ROOM_ID)
    		WHERE A.CHAT_ROOM_ID = #{chatRoomId, jdbcType=VARCHAR}
        	  AND PRO_ID = #{proId, jdbcType=VARCHAR}
        	  ORDER BY MSG_ID ASC
	</select>
	
<!-- 	<select id="selectChatList" parameterType="kr.or.ddit.projects.chat.vo.ChatVO" resultType="kr.or.ddit.projects.chat.vo.ChatVO"> -->
<!--        <![CDATA[  -->
<!-- 		select B.*  -->
<!-- 			FROM ( -->
<!-- 				select A.*, ROWNUM RNUM -->
<!-- 		    		from ( -->
<!-- 		        		SELECT MSG_ID,  -->
<!-- 				               CHAT_ROOM_ID,  -->
<!-- 				               MSG_WRITER,  -->
<!-- 				               MSG_CONTENT,  -->
<!-- 				               TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH:MM') CREATE_DATE  -->
<!-- 				            FROM MESSAGE -->
<!-- 				            WHERE CHAT_ROOM_ID = #{chatRoomId, jdbcType=VARCHAR} -->
<!-- 				    	) A  -->
<!-- 		    )B -->
<!-- 	    	where RNUM <= #{msgId, jdbcType=NUMERIC} order by MSG_ID DESC -->
<!-- 	    ]]>  -->
<!-- 	</select> -->
	
	<insert id="insertChat" parameterType="kr.or.ddit.projects.chat.vo.MessageVO">
		INSERT INTO MESSAGE(
			MSG_ID,
			CHAT_ROOM_ID,
			MSG_WRITER,
			MSG_CONTENT,
			CREATE_DATE
		)
		VALUES(
			TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || Message_SEQ.nextVal),
			#{chatRoomId, jdbcType=VARCHAR},
			#{msgWriter, jdbcType=VARCHAR},
			#{msgContent, jdbcType=CLOB},
			SYSDATE
		)
	</insert>
	
<!-- 	<delete id="deleteBoard" parameterType="kr.or.ddit.projects.board.vo.BoardVO"> -->
<!-- 		DELETE -->
<!-- 		  FROM BOARD -->
<!-- 		 WHERE BOARD_NO = #{boardNo, jdbcType=NUMERIC} -->
<!-- 	</delete> -->


	<!-- 신광진 2021. 02. 22 추가 -->
	<insert id="insertChatRoom" parameterType="kr.or.ddit.projects.project.vo.ProjectVO" >
		<selectKey keyProperty="chatRoomVO.chatRoomId" order="BEFORE" resultType="String">
			SELECT 'chat-'||LPAD(TO_NUMBER(NVL(SUBSTR(MAX(CHAT_ROOM_ID), 6), '0')) + 1, '5', '0')
  			  FROM CHAT_ROOM
		</selectKey>
		INSERT INTO CHAT_ROOM (
		    CHAT_ROOM_ID
		    , CHAT_TITLE
		    , MEM_COUNT
		    , PRO_ID
		) VALUES (
		    #{chatRoomVO.chatRoomId, jdbcType=VARCHAR}
		    , #{proName}||' 그룹 채팅방'
		    , #{proMemcount, jdbcType=NUMERIC}
		    , #{proId, jdbcType=VARCHAR}
		)
	</insert>

	<insert id="insertChatMemberList" parameterType="kr.or.ddit.projects.project.vo.ProjectVO">
		<selectKey keyProperty="chatRoomVO.chatRoomId" keyColumn="chatRoomId" order="BEFORE" resultType="String">
			SELECT CHAT_ROOM_ID
			  FROM CHAT_ROOM
			 WHERE PRO_ID = #{proId}
		</selectKey>
		
		INSERT ALL
		<foreach collection="proMemberList" item="proMemberVO">
			INTO CHAT_MEMBER (
				MEM_ID
				, CHAT_ROOM_ID
			) VALUES (
				#{proMemberVO.memId}
				, #{chatRoomVO.chatRoomId}
			)
		</foreach>
		SELECT * FROM DUAL
	</insert>



	
</mapper>