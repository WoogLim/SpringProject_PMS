package kr.or.ddit.security;

import java.util.ArrayList;

import javax.inject.Inject;

import org.springframework.context.support.MessageSourceAccessor;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import kr.or.ddit.projects.member.dao.AdminMemberDAO;
import kr.or.ddit.projects.member.vo.MemberVO;
import kr.or.ddit.projects.member.vo.MemberWrapper;

@Service("customUserService")
public class Authentication implements UserDetailsService {

	@Inject
	private AdminMemberDAO dao;

	@Inject
	private MessageSourceAccessor accessor;
	
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		MemberVO member = dao.selectMemberByUserName(username);
		if(member==null) {
			String message = accessor.getMessage("DigestAuthenticationFilter.usernameNotFound", new Object[] {username});
			throw new UsernameNotFoundException(message);
		}
		// setAuthorities에 가져오는 값이 없어서 null 상태임. 쩔수 없이 객체 생성 해줌.
		member.setAuthorities(new ArrayList<String>());
		member.getAuthorities().add("권한 테스트");
		// 버전이 업그레이드 되어서 패스워드 앞에 {noop}을 붙여주라는데 잘 모르겠음..
		// https://spring.io/blog/2017/11/01/spring-security-5-0-0-rc1-released 참고.
		// 암호화 되지 않은 패스워드에는 '{noop}'을 붙여야 하는 듯 싶음. 암호화 알고리즘 적용시 자동으로 패스워드 앞에 {bycrypt}가 붙긴 함.
		// 현재 db에 일부 계정 패스워드 바꿔 놓음
		// member.setMemPass("{noop}" + member.getMemPass());
		return new MemberWrapper(member);
	}
}
