<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.security.auth.dao.IAuthorityDAO">
	
	<select id="selectAllAuthorities" resultType="kr.or.ddit.security.vo.AuthorityVO">
		SELECT AUTHORITY
			 , ROLE_NAME
			 , DESCRIPTION
			 , CREATE_DATE
			 , MODIFY_DATE
		FROM ROLES	
	</select>

	<select id="roleHierarchy" resultType="string">
		SELECT CHILD_ROLE || '>' || PARENT_ROLE
		FROM ROLES_HIERARCHY
		START WITH CHILD_ROLE = 'ROLE_ADMIN'
		CONNECT BY PRIOR PARENT_ROLE = CHILD_ROLE
	</select>
	
	<select id="selectTeamAuthorityList" resultType="kr.or.ddit.security.vo.AuthorityVO">
		SELECT AUTHORITY
		     , ROLE_NAME
		     , DESCRIPTION
		  FROM ROLES
		 WHERE INSTR(AUTHORITY, 'ROLE_TEAM') > 0
	</select>
	
	<select id="selectAuthority" parameterType="kr.or.ddit.security.vo.AuthorityVO" resultType="kr.or.ddit.security.vo.AuthorityVO">
		SELECT AUTHORITY
			 , ROLE_NAME
			 , DESCRIPTION
			 , CREATE_DATE
			 , MODIFY_DATE
		  FROM ROLES
		 WHERE AUTHORITY = #{authority}
	</select>
	
	<select id="isInUseAuthority" parameterType="kr.or.ddit.security.vo.AuthorityVO" resultType="int">
		SELECT COUNT(*)
		  FROM DUAL
		 WHERE EXISTS (SELECT AUTHORITY
		                 FROM PROJECT_MEMBER
		                WHERE AUTHORITY = #{authority})
		   AND EXISTS (SELECT MEM_ROLE
		                 FROM MEMBER
		                WHERE MEM_ROLE = #{authority})
	</select>
	
	<select id="selectParentRoleAuthority" parameterType="kr.or.ddit.security.vo.AuthorityVO" resultType="kr.or.ddit.security.vo.AuthorityVO">
		SELECT BB.*
		  FROM(
		    SELECT AA.*, ROWNUM RNUM
		      FROM (
		        SELECT PARENT_ROLE AUTHORITY
		          FROM ROLES_HIERARCHY
		         WHERE CHILD_ROLE = #{authority}
		         ) AA
		    ) BB
		 WHERE RNUM = 1
	</select>
	
	<select id="selectChildRoleAuthority" parameterType="kr.or.ddit.security.vo.AuthorityVO" resultType="kr.or.ddit.security.vo.AuthorityVO">
		SELECT BB.*
		  FROM(
		    SELECT AA.*, ROWNUM RNUM
		      FROM (
		        SELECT CHILD_ROLE AUTHORITY
		          FROM ROLES_HIERARCHY
		         WHERE PARENT_ROLE = #{authority}
		         ) AA
		    ) BB
		 WHERE RNUM = 1
	</select>
	
	<select id="isExistParentRoleAuthority" parameterType="kr.or.ddit.security.vo.AuthorityVO" resultType="int">
		SELECT COUNT(*)
		  FROM DUAL
		 WHERE EXISTS (SELECT PARENT_ROLE
		                 FROM ROLES_HIERARCHY
		                WHERE CHILD_ROLE = #{authority})		
	</select>
	
	<insert id="insertRoleHierarchy" parameterType="java.util.HashMap">
		INSERT INTO ROLES_HIERARCHY(PARENT_ROLE, CHILD_ROLE)
		                     VALUES(#{parentRole}, #{childRole})
	</insert>
	
	<delete id="deleteRoleHierarchyAuthority" parameterType="kr.or.ddit.security.vo.AuthorityVO">
		DELETE
		  FROM ROLES_HIERARCHY
		 WHERE PARENT_ROLE = #{authority}
	</delete>
	
	<delete id="deleteAuthority" parameterType="kr.or.ddit.security.vo.AuthorityVO">
		DELETE
		  FROM ROLES
		 WHERE AUTHORITY = #{authority}
	</delete>
	
	<select id="selectDescriptionListForMember" resultType="kr.or.ddit.security.vo.AuthorityVO">
		SELECT AA.DESCRIPTION
		     , COUNT(*) AUTH_CNT
		  FROM (
		    SELECT AUTHORITY, DESCRIPTION
		      FROM ROLES
		     WHERE INSTR(AUTHORITY, 'TEAM') = 0
		       AND INSTR(AUTHORITY, 'AUTHENTICATED') = 0
		    ) AA, MEMBER M
		 WHERE AA.AUTHORITY = M.MEM_ROLE
		GROUP BY AA.DESCRIPTION
	</select>
	
	<select id="selectRoleNameListForProject" resultType="kr.or.ddit.security.vo.AuthorityVO">
		SELECT AA.ROLE_NAME
		     , COUNT(*) AUTH_CNT
		  FROM (
		    SELECT AUTHORITY, DESCRIPTION, ROLE_NAME
		      FROM ROLES
		     WHERE INSTR(AUTHORITY, 'TEAM') > 0
		    ) AA, PROJECT_MEMBER PM
		 WHERE AA.AUTHORITY = PM.AUTHORITY
		GROUP BY AA.ROLE_NAME
	</select>
	
</mapper>