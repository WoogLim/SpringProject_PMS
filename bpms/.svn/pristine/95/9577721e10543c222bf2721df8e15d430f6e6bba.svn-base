<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@taglib prefix="security" uri="http://www.springframework.org/security/tags"%>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.3.0/sockjs.min.js"></script>
<security:authorize access="isAuthenticated()">
	<security:authentication property="principal" var="principal" />
	<c:set var="authMember" value="${principal.realMember }" />
<div class="quick-sidebar chatactive-item">
    <a href="#" class="close-quick-sidebar">
        <i class="flaticon-cross"></i>
    </a>
    <div class="quick-sidebar-wrapper">
        <ul class="nav nav-tabs nav-line nav-color-secondary" role="tablist">
            <li class="nav-item"> 
            	<a class="nav-link active show" data-toggle="tab" href="#messages" role="tab"
                    aria-selected="true">프로젝트 채팅 메신저</a> </li>
        </ul>
        <div class="tab-content mt-3 ">
            <div class="tab-chat tab-pane fade show active" id="messages" role="tabpanel">
                <div class="messages-contact">
                    <div class="quick-wrapper">
                        <div class="quick-scroll scrollbar-outer">
                            <div class="chatroom-container">
                                <div class="chatnote-list">
                                    <div class="chat-header">
                                        <span>
                                            BPMS 프로그램 개발
                                        </span>
                                        <button type="button" class="chatroom-exit">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                    <div class="chat-content">
                                        <ul class="chat-list atThis">

                                        </ul>
                                    </div>
                                    <div class="chat-input">
                                        <form class="chatinput-container" action="">
                                            <div class="chat-inputmessage">
                                                <textarea name="" class="chat-message"></textarea>
                                            </div>
                                            <div class="chat-submit">
                                                <button class="chat-submitbtn" type="button" id="sendBtn">전송</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
							
                            <ul class="row chatroom-list here">
                               <li class="chatroom-item col-md-12">
                                   <button class="chatroom-card retire">
                                       <div class="chatroomlist-container">
                                           <div class="chatroom-header">
                                               <span class="chat-icon">
                                                   <i class="fas fa-users"></i>
                                                   <span class="dot-icon"></span>
                                                   <span class="icon-name">TALK</span>
                                               </span>
                                               <span class="chatproject-title">
                                                   BPMS프로그램 개발
                                               </span>
                                           </div>
                                           <div class="chatroom-content">
                                               <span class="lately-chat">
                                                   	저는 퇴사하겠습니다.
                                               </span>
                                               <span class="latelychat-date">
                                                   2021-02-24
                                               </span>
                                           </div>
                                       </div>
                                   </button>
                                </li>
                              </ul>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<li class="user-chat chat-me d-none">
    <div class="charuser-info">
        <span class="chatuser-name">
            
        </span>
        <span class="chatuser-date">
            
        </span>
    </div>
    <div class="chatuser-contents">
        <span class="contents-text"></span>
    </div>
</li>

<li class="user-chat chat-others d-none">
    <div class="charuser-info">
        <span class="chatuser-name">
            
        </span>
        <span class="chatuser-date">
            
        </span>
    </div>
    <div class="chatuser-contents">
        <span class="contents-text"></span>
    </div>
</li>
</security:authorize>
<script>
var inputMemId = "${authMember.memId}";

var toShowRoomList = {memId : inputMemId};
	
let retire = $(".retire");

let here = $(".chatroom-list");

function insertChat() {
	var writer = "${authMember.memId}";
	
	var sendData = {
			msgWriter : writer,
			chatRoomId : localStorage.getItem("chatRoomId"),
			msgContent : $(".chat-message").val(),
			proId : localStorage.getItem("proId")
		}
	
	$.ajax({
		url : "${pageContext.request.contextPath}/chat/chatInsert.do",
		type : "POST",
		data : JSON.stringify(sendData),
		dataType : "json",
		contentType : "application/json",
		success : function(result) {
			console.log("채팅 insert 성공");
		},
		error : function(xhr, status, err) {
			console.log("처리실패!");
			console.log(xhr);
			console.log(status);
			console.log(err);
		}
	});
}

function initSocket(url) {
	socket = new SockJS(url);
	
	socket.onmessage = function(evt) {
		console.log(evt);
		console.log(evt.data);
		$(".atThis").append(evt.data + "<br/>");
	};
	
	socket.onclose = function(evt) {
		$(".atThis").append("연결 종료");	
	}
	
	$("#sendBtn").on("click", function() {
		var msg = $(".chat-message").val();
		socket.send(msg);
		insertChat();
		$("#msgi").val("");
	});
	
	 // 메시지 입력하고 엔터를 누른 경우
    $('.chat-message').keydown(function(key){
        if(key.keyCode == 13){
        	socket.send(msg);
        	$(".chat-message").val("");
        }
    })
}

$(".chatToggle").on("click", function(){
	$.ajax({
		url : "${pageContext.request.contextPath}/chat/chatList.do",
		type : "GET",
		data : toShowRoomList,
		dataType : "json",
		contentType : "application/json",
		success : function(resp) {
			let pushTag = [];
// 			console.log(resp.chatRoomList);
			let chatRoomList = resp.chatRoomList;
			if(chatRoomList.length > 0){
				retire.hide();
				$(chatRoomList).each(function(idx, chatRoom){
					pushTag.push(
		  				$("<li>").addClass("chatroom-item col-md-12").append(
		  					$("<button>").addClass("chatroom-card").append(
			  					$("<div>").addClass("chatroomlist-container").append(
			  						$("<div>").addClass("chatroom-header").append(
			  							$("<span>").addClass("chat-icon").append(
				  							$("<i>").addClass("fas fa-users")
				  							,$("<span>").addClass("dot-icon")
											,$("<span>").addClass("icon-name").text("TALK")		  									
			  							)
			  							,$("<span>").addClass("chatproject-title").text(chatRoom.chatTitle)
			  						)
			  						,$("<div>").addClass("chatproject-content").append(
		  								$("<span>").addClass("lately-chat").text(chatRoom.proId)
		  								,$("<span>").addClass("latelychat-date").text(chatRoom.memCount)
		  								,$("<input type='hidden'>").text(chatRoom.chatRoomId)
		  								,$("<input type='hidden'>").text(chatRoom.proId)
			  						)
			  					)
		  					)
		  				)
	  				  );
				});
			}else{
				retire.hide();
			}
			here.html(pushTag);

		},
		error : function(xhr, status, err) {
			console.log("처리실패!");
			console.log(xhr);
			console.log(status);
			console.log(err);
		}
	});
})

    $(document).ready(function(){
		var memId = "${authMember.memId}";			//사용자 아이디를 파라미터로 받는다
   		
   		initSocket("${cPath}/chat/chatView.do?memId=" + memId 
   				+ "&proId=" 
   				+ localStorage.getItem("proId") 
   				+ "&chatRoomId=" 
   				+ localStorage.getItem("chatRoomId") );
		
    	$(".here").on("click", "button", function(){
    		$(".here").hide();
    		$('.chatroom-container').show();
    		let inputMemId = "${authMember.memId}";
    		let chooseRoom = $(this).find("[type='hidden']").eq(0).text();
    		localStorage.setItem("chatRoomId", chooseRoom);
    		let whichProj = $(this).find("[type='hidden']").eq(1).text();
    		localStorage.setItem("proId", whichProj);
    		var toEnterRoom = {
   				memId : inputMemId,
   				chatRoomId : chooseRoom,
   				proId : whichProj
    		}
    		
    		$.ajax({
    			url : "${pageContext.request.contextPath}/chat/chatView.do",
    			type : "GET",
    			data : toEnterRoom,
    			dataType : "json",
    			contentType : "application/json",
    			success : function(resp) {
    				var atThis = $(".atThis");
    				liTag = []
    				let chatList = resp.chatList.messageList;
    				if(chatList.length > 0){
    					$(chatList).each(function(idx, chat){
    						if('${authMember.memId}'!=chat.msgWriter){
    							liTag.push(
    								$("<li>").addClass("user-chat chat-others").append(
    									$("<div>").addClass("charuser-info").append(
    										$("<span>").addClass("chatuser-name").text(chat.msgWriter)
    										,$("<span>").addClass("chatuser-date").text(chat.createDate)
    									)
    									,$("<div>").addClass("chatuser-contents").append(
    										$("<span>").addClass("contents-text").text(chat.msgContent)		
    									)
    								)		
    							)
    						}else{
    							liTag.push(
       								$("<li>").addClass("user-chat chat-me").append(
       									$("<div>").addClass("charuser-info").append(
       										$("<span>").addClass("chatuser-name").text(chat.msgWriter)
       										,$("<span>").addClass("chatuser-date").text(chat.createDate)
       									)
       									,$("<div>").addClass("chatuser-contents").append(
       										$("<span>").addClass("contents-text").text(chat.msgContent)		
       									)
       								)		
       							)
    						}
    						console.log(liTag);
    						atThis.html(liTag)
    					});
    				}
    				
    			},
    			error : function(xhr, status, err) {
    				console.log("처리실패!");
    				console.log(xhr);
    			}
    		});
    	})
    		
   		
    	
//     	function moveDown() {
// 			$(".atThis").scrollTop($(".atThis")[0].scrollHeight);
// 		}
    	
        // chatme는 나
//         let chatme = $('.chatme').clone();
        // chatother는 상대방
//         let chatother = $('.chat-others').clone();

        $('.chat-btn').click(function(){
            console.log('눌림');
        })

        // 채팅방 나갈때, 채팅방 나갈때 이전 기록 화면에서 삭제해야함. $('.chat-list').children().remove() 이런식으로
        $('.chatroom-exit').click(function(){
            $('.chatroom-container').hide();
            $('.chatroom-list').show();
        })

        $('.chatroom-card').click(function(){
            $('.chatroom-list').hide();
            $('.chatroom-container').show();
        })
    })
</script>