<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.projects.issue.dao.IssueDAO">
	
	<!-- 이슈 필터 타입 left menu 개편이후 안씀-->
	<sql id="issueFilter">
		<if test="searchDetail.filterList != null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.filterList)">
			<!-- 레프트 메뉴 -->
			<choose>
				<when test="'mine'.equals(searchDetail.filterList)">
					AND I.ISSUE_DIRECTOR = #{memId}
				</when>
				<when test="'resolved'.equals(searchDetail.filterList)">
					AND I.ISSUE_STATE = '해결'
				</when>
				<when test="'unResolved'.equals(searchDetail.filterList)">
					AND I.ISSUE_DIRECTOR = #{memId} 
					AND I.ISSUE_STATE != '해결'
				</when>
			</choose>
		</if>
		<!-- 프로젝트 선택 후 조회 시 -->
		<if test="searchDetail.proId != null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.proId)">
			AND B.PRO_ID = #{searchDetail.proId}
		</if>
		<!-- 프로젝트 필터 -->
		<if test="searchDetail.filterProject != null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.filterProject)">
			AND B.PRO_ID = #{searchDetail.filterProject}
		</if>
		<!-- 이슈 우선 순위 -->
		<if test="searchDetail.issueRank != null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.issueRank)">
			AND I.ISSUE_RANK = #{searchDetail.issueRank}
		</if>
		<!-- 이슈 유형 -->
		<if test="searchDetail.issueType != null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.issueType)">
			AND I.ISSUE_TYPE = #{searchDetail.issueType}
		</if>
		<!-- 이슈 상태 -->
		<if test="searchDetail.issueState != null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.issueState)">
			AND I.ISSUE_STATE = #{searchDetail.issueState}
		</if>
		<!-- 아이디 정렬 -->
		<choose>
			<when test="'ASC'.equals(searchDetail.sort)">
				ORDER BY I.ISSUE_ID ASC
			</when>
			<otherwise>
				ORDER BY I.ISSUE_ID DESC
			</otherwise>
		</choose>
	</sql>
	
	<select id="selectIssueListCount" parameterType="kr.or.ddit.vo.PagingVO" resultType="int">
		SELECT COUNT(*)
		FROM PROJECT P LEFT OUTER JOIN PROJECT_MEMBER PM ON (P.PRO_ID = PM.PRO_ID)
             LEFT OUTER JOIN MEMBER M ON (PM.MEM_ID = M.MEM_ID)
             LEFT OUTER JOIN BOARD B ON (P.PRO_ID = B.PRO_ID)
             INNER JOIN ISSUE I ON (B.BOARD_NO = I.ISSUE_ID)
        WHERE B.BOARD_NO = I.ISSUE_ID
        AND M.MEM_ID = #{memId}
		<include refid="issueFilter"></include>
	</select>
	
	<select id="selectIssueList" parameterType="kr.or.ddit.vo.PagingVO" resultType="kr.or.ddit.projects.issue.vo.IssueVO">
		SELECT B.*
	 	FROM(
	    SELECT A.*, ROWNUM RNUM
	    	FROM(
	        SELECT 
	        	I.ISSUE_ID
	        	,I.ISSUE_RANK
	        	,I.ISSUE_TYPE	
	        	,I.ISSUE_STATE
	        	,I.ISSUE_SHOW
	        	,TO_CHAR(I.START_DATE, 'YYYY-MM-DD') START_DATE
        		,TO_CHAR(I.END_DATE, 'YYYY-MM-DD') END_DATE
	        	,TRIM(I.PROGRESS) PROGRESS
	        	,I.ISSUE_DIRECTOR
				,I.WORK_ID
				,B.BOARD_NO 
				,B.BOARD_TITLE
				,B.BOARD_CONTENT
				,B.BOARD_WRITER   	
				,B.BOARD_SHOW
				,B.CREATE_DATE
				,B.MODIFY_DATE
   				,B.PRO_ID
   				,B.GROUP_CODE
   				,B.CODE
			FROM BOARD B, ISSUE I
	        WHERE B.BOARD_NO = I.ISSUE_ID
	      	) A
	    ) B
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectByMemberToIssueList" parameterType="kr.or.ddit.vo.PagingVO" resultType="kr.or.ddit.projects.issue.vo.IssueVO">
		SELECT 
			RES.*
<!-- 			,C.CODE -->
<!-- 			,C.CODE_NAME -->
<!-- 			,C.GROUP_CODE -->
<!-- 			,C.GROUP_NAME -->
		FROM(
	    	SELECT A.*, ROWNUM RNUM
	        FROM (    
	            SELECT 
	                I.ISSUE_ID
	                ,I.ISSUE_RANK
	                ,I.ISSUE_TYPE	
	                ,I.ISSUE_STATE
	                ,I.ISSUE_SHOW
	                ,TO_CHAR(I.START_DATE, 'YYYY-MM-DD') START_DATE
	                ,TO_CHAR(I.END_DATE, 'YYYY-MM-DD') END_DATE
	                ,TRIM(I.PROGRESS) PROGRESS
	                ,I.ISSUE_DIRECTOR
	                ,I.WORK_ID
	                ,B.BOARD_NO 
	                ,B.BOARD_TITLE
	                ,B.BOARD_CONTENT
	                ,B.BOARD_WRITER   	
	                ,B.BOARD_SHOW
	                ,B.CREATE_DATE
	                ,B.MODIFY_DATE
	                ,B.PRO_ID
	                ,B.GROUP_CODE
	                ,B.CODE
	                ,P.PRO_NAME
	            FROM PROJECT P LEFT OUTER JOIN PROJECT_MEMBER PM ON (P.PRO_ID = PM.PRO_ID)
	                 LEFT OUTER JOIN MEMBER M ON (PM.MEM_ID = M.MEM_ID)
	                 LEFT OUTER JOIN BOARD B ON (P.PRO_ID = B.PRO_ID)
	                 INNER JOIN ISSUE I ON (B.BOARD_NO = I.ISSUE_ID)
	            WHERE B.BOARD_NO = I.ISSUE_ID
	            AND M.MEM_ID = #{memId}
	            <include refid="issueFilter"></include>
	        ) A
	  	)RES
<!-- 	  		LEFT OUTER JOIN CODE C ON ( -->
<!--            	(RES.ISSUE_RANK = C.CODE AND C.GROUP_CODE = 'IR') -->
<!--            	OR (RES.ISSUE_TYPE = C.CODE AND C.GROUP_CODE = 'IT') -->
<!--         	OR (RES.ISSUE_STATE = C.CODE AND C.GROUP_CODE = 'IS') -->
<!--      	) -->
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 이슈 상세 조회 시 첨부 파일 및 댓글도 조회 -->
	<resultMap type="kr.or.ddit.projects.issue.vo.IssueVO" id="issueMap" autoMapping="true">
		<id property="issueId" column="ISSUE_ID"/>
		<collection property="attatchList" ofType="kr.or.ddit.projects.file.vo.AttatchVO" autoMapping="false">
			<id property="attNo" column="ATT_NO"/>
			<id property="attOriginname" column="ATT_ORIGINNAME"/>
			<id property="attSavename" column="ATT_SAVENAME"/>
			<id property="attMime" column="ATT_MIME"/>
			<id property="attFilesize" column="ATT_FILESIZE"/>
			<id property="attFancy" column="ATT_FANCY"/>
			<id property="attDowncount" column="ATT_DOWNCOUNT"/>
		</collection>
		<collection property="replyList" ofType="kr.or.ddit.projects.reply.vo.ReplyVO" autoMapping="true">
			<id property="replyNo" column="REPLY_NO"/>
			<id property="replyTitle" column="REPLY_TITLE"/>
			<id property="replyContent" column="REPLY_CONTENT"/>
			<id property="replyPass" column="REPLY_PASS"/>
			<id property="replyWriter" column="REPLY_WRITER"/>
			<id property="createDate" column="CREATE_DATE"/>
			<id property="modifyDate" column="MODIFY_DATE"/>
			<id property="replyParent" column="REPLY_PARENT"/>
		</collection>
	</resultMap>
	
	<!-- 이슈 상세 조회 -->
	<select id="selectIssue" parameterType="kr.or.ddit.projects.issue.vo.IssueVO" resultMap="issueMap">
		SELECT 
        	I.ISSUE_ID
        	,I.ISSUE_RANK
        	,I.ISSUE_TYPE	
        	,I.ISSUE_STATE
        	,I.ISSUE_SHOW
        	,TO_CHAR(I.START_DATE, 'YYYY-MM-DD') START_DATE
        	,TO_CHAR(I.END_DATE, 'YYYY-MM-DD') END_DATE
        	,TRIM(I.PROGRESS) PROGRESS
        	,I.ISSUE_DIRECTOR
			,I.WORK_ID
			,B.BOARD_NO 
			,B.BOARD_TITLE
			,B.BOARD_CONTENT
			,B.BOARD_WRITER   	
			,B.BOARD_SHOW
			,B.CREATE_DATE
			,TO_CHAR(B.MODIFY_DATE, 'YYYY.MM.DD. AM HH:MI.') MODIFY_DATE
 			,B.PRO_ID
 			,B.GROUP_CODE
 			,B.CODE
 			,A.ATT_NO    
		   	,A.ATT_ORIGINNAME    
		    ,A.ATT_SAVENAME
		    ,A.ATT_MIME
		    ,A.ATT_FILESIZE    
		    ,A.ATT_FANCY
		   	,A.ATT_DOWNCOUNT
		    ,R.REPLY_NO
		    ,R.REPLY_WRITER
		    ,R.CREATE_DATE
		    ,R.REPLY_CONTENT
		FROM  BOARD B LEFT OUTER JOIN ATTATCH A ON (B.BOARD_NO = A.BOARD_NO)
              LEFT OUTER JOIN REPLY R ON (B.BOARD_NO = R.BOARD_NO)
              INNER JOIN ISSUE I ON (B.BOARD_NO = I.ISSUE_ID)
        WHERE B.BOARD_NO = I.ISSUE_ID
        AND I.ISSUE_ID = #{issueId}
	</select>
	
	<!-- 이슈 폼 구성용 쿼리 -->
	
	<select id="selectByMemberToProjectList" parameterType="kr.or.ddit.projects.member.vo.MemberVO" resultType="kr.or.ddit.projects.project.vo.ProjectVO">
		SELECT P.*
		FROM PROJECT P, PROJECT_MEMBER PM, MEMBER M
		WHERE P.PRO_ID = PM.PRO_ID
		AND PM.MEM_ID = M.MEM_ID
		AND M.MEM_ID = #{memId} 
	</select>

	<select id="selectByProjectToMemberList" parameterType="kr.or.ddit.projects.issue.vo.IssueVO" resultType="kr.or.ddit.projects.member.vo.MemberVO">
		SELECT M.*
		FROM PROJECT P, PROJECT_MEMBER PM, MEMBER M
		WHERE P.PRO_ID = PM.PRO_ID
		AND PM.MEM_ID = M.MEM_ID
		AND P.PRO_ID = #{proId}
	</select>
	
	<!-- 이슈 생성 쿼리 -->
	<insert id="insertIssue" parameterType="kr.or.ddit.projects.issue.vo.IssueVO">
		INSERT INTO ISSUE (
			ISSUE_ID
			,ISSUE_RANK
			,ISSUE_TYPE
		    ,ISSUE_STATE
		    ,ISSUE_SHOW
		    ,START_DATE
		    ,END_DATE
		    ,PROGRESS
		    ,ISSUE_DIRECTOR
		    ,WORK_ID
		)VALUES(
			#{boardNo, jdbcType=NUMERIC}
			,#{issueRank, jdbcType=VARCHAR}
			,#{issueType, jdbcType=VARCHAR}
			,#{issueState, jdbcType=VARCHAR}
			,#{issueShow, jdbcType=CHAR}
			,#{startDate, jdbcType=VARCHAR}
			,#{endDate, jdbcType=VARCHAR}
			,TRIM(#{progress, jdbcType=CHAR})
			,#{issueDirector, jdbcType=VARCHAR}
			,#{workId, jdbcType=NUMERIC}
		)
	</insert>
	
	<!-- 이슈 수정 쿼리 -->
	<update id="updateIssue" parameterType="kr.or.ddit.projects.issue.vo.IssueVO">
		UPDATE ISSUE
		   SET
		    ISSUE_RANK      = #{issueRank, jdbcType=VARCHAR}
		    ,ISSUE_TYPE     = #{issueType, jdbcType=VARCHAR}
		    ,ISSUE_STATE    = #{issueState, jdbcType=VARCHAR}
		    ,ISSUE_SHOW     = #{issueShow, jdbcType=VARCHAR}
		    ,START_DATE     = #{startDate, jdbcType=VARCHAR}
		    ,MODIFY_DATE    = SYSDATE
		    ,END_DATE       = #{endDate, jdbcType=VARCHAR}
		    ,PROGRESS       = TRIM(#{progress, jdbcType=VARCHAR})
		    ,ISSUE_DIRECTOR = #{issueDirector, jdbcType=CHAR}
		    ,WORK_ID        = #{workId, jdbcType=VARCHAR}
		WHERE
			ISSUE_ID = #{issueId, jdbcType=NUMERIC}
	</update>
	
	<delete id="deleteIssue">
		DELETE BOARD WHERE BOARD_NO = #{issueId, jdbcType=NUMERIC}
	</delete>
	
	<!-- 현재 날짜에 생성된 이슈 개수를 타입별로 조회 -->
	<select id="selectTodayIssueList" parameterType="kr.or.ddit.projects.project.vo.ProjectVO" resultType="kr.or.ddit.projects.issue.vo.IssueVO">
	    SELECT I.ISSUE_TYPE
	         , B.PRO_ID
	         , COUNT(*) ISSUE_CNT
             , CUSTOM.CUSTOM_NO
	      FROM ISSUE I INNER JOIN BOARD B ON (I.ISSUE_ID = B.BOARD_NO) 
	                   INNER JOIN (SELECT TEXT, CUSTOM_NO
	                                 FROM CUSTOM_INFO
	                                WHERE GROUP_CODE = 'IT') CUSTOM ON (I.ISSUE_TYPE = CUSTOM.TEXT)
	     WHERE B.PRO_ID = #{proId}
	       AND B.CREATE_DATE = SYSDATE
	    GROUP BY I.ISSUE_TYPE, B.PRO_ID, CUSTOM.CUSTOM_NO
        ORDER BY CUSTOM.CUSTOM_NO
	</select>
	
	<select id="selectByProjectToWorkList" parameterType="kr.or.ddit.projects.issue.vo.IssueVO" resultType="kr.or.ddit.projects.work.vo.WorkVO">
		SELECT
			W.WORK_ID
		    ,W.WORK_RANK
		    ,W.WORK_TYPE	
		    ,W.WORK_STATE
		    ,W.WORK_SHOW
		    ,TO_CHAR(W.START_DATE, 'YYYY-MM-DD') START_DATE
		    ,TO_CHAR(W.END_DATE, 'YYYY-MM-DD') END_DATE
		    ,TRIM(W.PROGRESS) PROGRESS
		    ,W.WORK_DIRECTOR
		    ,W.WORK_PARENT
		    ,B.BOARD_NO 
		    ,B.BOARD_TITLE
		    ,B.BOARD_CONTENT
		    ,B.BOARD_WRITER   	
		    ,B.BOARD_SHOW
		    ,B.CREATE_DATE
		    ,B.MODIFY_DATE
		    ,B.PRO_ID
		    ,B.GROUP_CODE
		    ,B.CODE
		    ,P.PRO_NAME
		FROM PROJECT P INNER JOIN BOARD B ON (P.PRO_ID = B.PRO_ID)
		     INNER JOIN WORK W ON (B.BOARD_NO = W.WORK_ID)
		WHERE P.PRO_ID = #{proId}
		<if test="workSearch != null and @org.apache.commons.lang3.StringUtils@isNotBlank(workSearch)">
			AND (W.WORK_ID LIKE '%'||#{workSearch}||'%' OR B.BOARD_TITLE LIKE '%'||#{workSearch}||'%')
		</if>
	</select>
	
	<select id="issueToWorkCheck" parameterType="kr.or.ddit.projects.issue.vo.IssueVO" resultType="kr.or.ddit.projects.work.vo.WorkVO">
		SELECT *
		FROM BOARD B INNER JOIN WORK W ON (B.BOARD_NO = W.WORK_ID) 
		WHERE W.WORK_ID = #{workId} 
		AND B.PRO_ID = #{proId}
	</select>
</mapper>