<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.projects.history.dao.HistoryDAO">
	
	<sql id="filterFlag">
		<choose>
			<!-- 이슈 -->
			<when test="'issue'.equals(searchDetail.filterList)">
				AND H.BOARD_TYPE = 2
			</when>
			<!-- 프로젝트 공지 -->
			<when test="'workreport'.equals(searchDetail.filterList)">
				AND H.BOARD_TYPE = 1
			</when>
			<!-- 위키 -->
			<when test="'wiki'.equals(searchDetail.filterList)">
				AND H.BOARD_TYPE = 7
			</when>
			<!-- default 일감 -->
			<otherwise>
				AND H.BOARD_TYPE = 3
			</otherwise>
		</choose>
	</sql>
	
	<select id="selectHistoryListCount" parameterType="kr.or.ddit.vo.PagingVO" resultType="int">
		SELECT COUNT(*)
		FROM PROJECT P LEFT OUTER JOIN PROJECT_MEMBER PM ON (P.PRO_ID = PM.PRO_ID)
		     LEFT OUTER JOIN MEMBER M ON (PM.MEM_ID = M.MEM_ID) 
		     INNER JOIN HISTORY H ON (H.PRO_ID = P.PRO_ID)
		WHERE M.MEM_ID = #{memId}
		<if test="searchDetail.proId != null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.proId)">
			AND P.PRO_ID = #{searchDetail.proId}
		</if>
		AND	TRUNC(HISTORY_DATE) BETWEEN TO_DATE(#{searchDetail.searchStartDate}, 'YYYY-MM-DD') AND TO_DATE(#{searchDetail.searchEndDate}, 'YYYY-MM-DD')
		<include refid="filterFlag" />
	</select>

	<select id="selectHistoryList" parameterType="kr.or.ddit.vo.PagingVO" resultType="kr.or.ddit.projects.history.vo.HistoryVO">
		SELECT RES.*
		FROM(
			SELECT A.*, ROWNUM RNUM
			FROM(
				SELECT
				     H.HISTORY_ID
				    ,H.HISTORY_TITLE
				    ,H.HISTORY_CONTENT
				    ,H.HISTORY_URI
				    ,H.PRO_ID
				    ,H.HISTORY_WRITER
				    ,H.HISTORY_TYPE
				    ,H.HISTORY_STATE
				    ,TO_CHAR(H.HISTORY_DATE, 'YYYY.MM.DD. AM HH:MI') HISTORY_DATE
				    ,H.BOARD_TYPE
				    ,P.PRO_NAME
				    ,M.MEM_NAME
				    ,C.CODE_NAME BOARD_TYPE_NAME
				FROM PROJECT P LEFT OUTER JOIN PROJECT_MEMBER PM ON (P.PRO_ID = PM.PRO_ID)
				     LEFT OUTER JOIN MEMBER M ON (PM.MEM_ID = M.MEM_ID) 
				     INNER JOIN HISTORY H ON (H.PRO_ID = P.PRO_ID)
				     LEFT OUTER JOIN CODE C ON (C.GROUP_CODE = 'B' AND H.BOARD_TYPE = C.CODE)
				WHERE M.MEM_ID = #{memId}
				<if test="searchDetail.proId != null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.proId)">
					AND P.PRO_ID = #{searchDetail.proId}
				</if>
				AND	TRUNC(HISTORY_DATE) BETWEEN TO_DATE(#{searchDetail.searchStartDate}, 'YYYY-MM-DD') AND TO_DATE(#{searchDetail.searchEndDate}, 'YYYY-MM-DD')
				<include refid="filterFlag" />
				ORDER BY H.HISTORY_ID DESC
			) A
		) RES
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<insert id="insertHistory">
		<selectKey order="BEFORE" keyProperty="historyId" resultType="String">
			SELECT 'H-'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(HISTORY_ID,3))), 0)+1, 5, '0')
			FROM HISTORY
		</selectKey>
		INSERT INTO HISTORY (
		    HISTORY_ID
			, HISTORY_TYPE
			, HISTORY_TITLE
			, HISTORY_CONTENT
			, HISTORY_URI
			, PRO_ID
			, HISTORY_WRITER
			, HISTORY_STATE
			, BOARD_TYPE
		) VALUES (
			#{historyId, jdbcType=VARCHAR}
			, #{historyType, jdbcType=VARCHAR}
			, #{historyTitle, jdbcType=VARCHAR}
			, #{historyContent, jdbcType=CLOB}
			, #{historyUri, jdbcType=VARCHAR}
			, #{proId, jdbcType=VARCHAR}
			, #{historyWriter, jdbcType=VARCHAR}
			, #{historyState, jdbcType=VARCHAR}
			, #{boardType, jdbcType=VARCHAR}
		)
	</insert>
</mapper>